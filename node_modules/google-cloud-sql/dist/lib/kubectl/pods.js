"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.portForward = exports.waitForPodReady = exports.deletePod = exports.runCloudSqlProxyPod = void 0;
const chalk_1 = require("chalk");
const exec_1 = require("../util/exec");
const runCloudSqlProxyPod = (pod) => {
    return (0, exec_1.execCommand)(`
    kubectl run \
      --image=gcr.io/cloudsql-docker/gce-proxy \
      --context="${pod.context}" \
      --namespace="${pod.namespace}" \
      --overrides='{"spec": {"serviceAccount": "${pod.serviceAccount}"}}' \
      --annotations="cluster-autoscaler.kubernetes.io/safe-to-evict=true" \
      --labels=app=google-cloud-sql \
      ${pod.name} \
      -- /cloud_sql_proxy -enable_iam_login -ip_address_types=PRIVATE -instances=${pod.instance}=tcp:${pod.remotePort}
  `);
};
exports.runCloudSqlProxyPod = runCloudSqlProxyPod;
const deletePod = (pod) => {
    console.log(`Deleting pod '${(0, chalk_1.bold)((0, chalk_1.cyan)(pod.name))}'.`);
    (0, exec_1.execCommand)(`
    kubectl delete pod ${pod.name} \
      --context="${pod.context}" \
      --namespace="${pod.namespace}"
  `);
    console.log(`Pod '${(0, chalk_1.bold)((0, chalk_1.cyan)(pod.name))}' deleted.`);
};
exports.deletePod = deletePod;
const waitForPodReady = (pod) => {
    console.log(`Waiting for pod '${(0, chalk_1.bold)((0, chalk_1.cyan)(pod.name))}'.`);
    (0, exec_1.execCommand)(`
    kubectl wait pod ${pod.name} \
      --for=condition=ready \
      --context="${pod.context}" \
      --namespace="${pod.namespace}"
  `);
    console.log(`Pod '${(0, chalk_1.bold)((0, chalk_1.cyan)(pod.name))}' is ready.`);
};
exports.waitForPodReady = waitForPodReady;
const portForward = (pod) => {
    console.log(`Starting port forwarding to pod '${(0, chalk_1.bold)((0, chalk_1.cyan)(pod.name))}'.`);
    (0, exec_1.execCommandAttached)(`
    kubectl port-forward ${pod.name} ${pod.localPort}:${pod.remotePort} \
      --context="${pod.context}" \
      --namespace="${pod.namespace}"
  `);
};
exports.portForward = portForward;
