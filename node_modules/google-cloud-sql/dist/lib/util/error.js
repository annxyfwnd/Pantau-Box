"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.logError = exports.tryCatch = exports.CommandExecutionError = void 0;
const chalk_1 = require("chalk");
class CommandExecutionError extends Error {
    constructor(command, stderr, stdout) {
        super('Error while executing command.');
        this.data =
            `${(0, chalk_1.bold)((0, chalk_1.red)(this.message))}\n` +
                `  ${(0, chalk_1.bold)('command')}: ${command.trim()}\n` +
                `  ${(0, chalk_1.bold)('stderr')}: ${stderr.trim()}\n` +
                (stdout ? `  ${(0, chalk_1.bold)('stdout')}: ${stdout.trim()}\n` : '');
    }
}
exports.CommandExecutionError = CommandExecutionError;
const tryCatch = (fn) => {
    return (a, b) => {
        try {
            return fn(a, b);
        }
        catch (error) {
            (0, exports.logError)(error);
            throw error;
        }
    };
};
exports.tryCatch = tryCatch;
const logError = (error) => {
    if (error instanceof CommandExecutionError) {
        console.error(error.data);
    }
    else {
        console.error(error);
    }
};
exports.logError = logError;
