"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createConfiguration = void 0;
const chalk_1 = require("chalk");
const inquirer_1 = __importDefault(require("inquirer"));
const inquirer_autocomplete_prompt_1 = __importDefault(require("inquirer-autocomplete-prompt"));
const configurations_1 = require("../../lib/configurations");
const configuration_name_1 = require("./prompts/configuration-name");
const confirmation_1 = require("./prompts/confirmation");
const google_cloud_project_1 = require("./prompts/google-cloud-project");
const google_cloud_sql_instance_1 = require("./prompts/google-cloud-sql-instance");
const kubernetes_context_1 = require("./prompts/kubernetes-context");
const kubernetes_namespace_1 = require("./prompts/kubernetes-namespace");
const kubernetes_service_account_1 = require("./prompts/kubernetes-service-account");
const local_port_1 = require("./prompts/local-port");
const createConfiguration = async () => {
    inquirer_1.default.registerPrompt('autocomplete', inquirer_autocomplete_prompt_1.default);
    const answers = await inquirer_1.default.prompt([
        google_cloud_project_1.googleCloudProjectPrompt,
        google_cloud_sql_instance_1.googleCloudSqlInstancePrompt,
        kubernetes_context_1.kubernetesContextPrompt,
        kubernetes_namespace_1.kubernetesNamespacePrompt,
        kubernetes_service_account_1.kubernetesServiceAccountPrompt,
        local_port_1.localPortPrompt,
        configuration_name_1.configurationNamePrompt,
        confirmation_1.confirmationPrompt,
    ]);
    if (answers.confirmation) {
        (0, configurations_1.saveConfiguration)(answers);
        console.log((0, chalk_1.green)(`Saved configuration '${(0, chalk_1.bold)(answers.configurationName)}'.`));
    }
    else {
        console.log((0, chalk_1.red)('You are excused.'));
    }
};
exports.createConfiguration = createConfiguration;
